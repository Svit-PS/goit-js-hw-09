{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoFA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IA3FQO,SAASC,cAAc,SAC/BC,iBAAiB,UA2CxB,SAAsBC,GACpBA,EAAMC,iBAEN,IAIIC,EAAAF,EAAMG,cAAcC,SAHtBC,EAGEH,EAHFZ,MACAgB,EAEEJ,EAFFK,KACAC,EACEN,EADFO,OAGIC,EAAQC,OAAON,EAASO,OACxBL,EAAOI,OAAOL,EAAQM,OACtBH,EAASE,OAAOH,EAAUI,OAEhC,IAAKC,EAAI,EAAGA,EAAIJ,EAAQI,IACtBzB,EAAcyB,EAAI,EAAGH,EAAQG,EAAIN,GAC9BO,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,KAAK,CACnBC,SAAS,EACTC,KAAM,CACJC,WAAY,WAGhBL,EAAA9B,GAAS+B,OAAOG,KAAK,uBAAwCE,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,OACjEiC,QAAMC,IAAI,uBAAwCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAE3DmC,OAAM,SAAAV,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOC,KAAK,CACnBC,SAAS,EACTC,KAAM,CACJC,WAAY,SAGhBL,EAAA9B,GAAS+B,OAAOG,KAAK,sBAAuCE,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,OAChEiC,QAAMC,IAAI,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onSubmitForm);\n\n// Notiflix.Notify.init({\n//   width: '280px',\n//   position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n//   distance: '10px',\n//   opacity: 1,\n//   borderRadius: '5px',\n//   rtl: false,\n//   timeout: 3000,\n//   messageMaxLength: 110,\n//   backOverlay: false,\n//   backOverlayColor: 'rgba(0,0,0,0.5)',\n//   plainText: true,\n//   showOnlyTheLastOne: false,\n//   clickToClose: false,\n//   pauseOnHover: true,\n\n//   ID: 'NotiflixNotify',\n//   className: 'notiflix-notify',\n//   zindex: 4001,\n//   fontFamily: 'Quicksand',\n//   fontSize: '13px',\n//   cssAnimation: true,\n//   cssAnimationDuration: 400,\n//   cssAnimationStyle: 'fade', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\n//   closeButton: false,\n//   useIcon: false,\n//   useFontAwesome: false,\n//   fontAwesomeIconStyle: 'basic', // 'basic' - 'shadow'\n//   fontAwesomeIconSize: '34px',\n\n//   info: {\n//     background: '#26c0d3',\n//     textColor: '#fff',\n//     childClassName: 'notiflix-notify-info',\n//     notiflixIconColor: 'rgba(0,0,0,0.2)',\n//     fontAwesomeClassName: 'fas fa-info-circle',\n//     fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n//     backOverlayColor: 'rgba(38,192,211,0.2)',\n//   },\n// });\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const {\n    delay: strDelay,\n    step: strStep,\n    amount: strAmount,\n  } = event.currentTarget.elements;\n\n  const delay = Number(strDelay.value);\n  const step = Number(strStep.value);\n  const amount = Number(strAmount.value);\n\n  for (i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.init({\n          useIcon: false,\n          info: {\n            background: 'green',\n          },\n        });\n        Notiflix.Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.init({\n          useIcon: false,\n          info: {\n            background: 'red',\n          },\n        });\n        Notiflix.Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","strDelay","strStep","step","strAmount","amount","delay1","Number","value","i","then","param","$parcel$interopDefault","Notify","init","useIcon","info","background","concat","console","log","catch"],"version":3,"file":"03-promises.92e715e3.js.map"}